// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Json from "./../node_modules/@glennsl/bs-json/src/Json.bs.js";
import * as Caml_obj from "./../node_modules/bs-platform/lib/es6/caml_obj.js";
import * as Json_decode from "./../node_modules/@glennsl/bs-json/src/Json_decode.bs.js";

var subredditName = "MartialMemes";

var subredditURL = "https://www.reddit.com/r/MartialMemes/new.json?raw_json=1&sort=new&limit=100";

function decodeRedditPostData(json) {
  var partial_arg = { };
  return {
          url: Json_decode.field("url", Json_decode.string, json),
          title: Json_decode.field("title", Json_decode.string, json),
          is_self: Json_decode.field("is_self", Json_decode.bool, json),
          media: Caml_obj.caml_notequal(Json_decode.field("media", (function (param) {
                      return Json_decode.withDefault(partial_arg, (function (param) {
                                    return Json_decode.dict(Json_decode.id, param);
                                  }), param);
                    }), json), { })
        };
}

function decodeRedditPost(json) {
  return {
          data: Json_decode.field("data", decodeRedditPostData, json),
          kind: Json_decode.field("kind", Json_decode.string, json)
        };
}

function decodeRedditResponseData(json) {
  return {
          after: Json_decode.field("after", Json_decode.string, json),
          before: Json_decode.optional((function (param) {
                  return Json_decode.field("before", Json_decode.string, param);
                }), json),
          children: Json_decode.field("children", (function (param) {
                  return Json_decode.list(decodeRedditPost, param);
                }), json),
          modhash: Json_decode.field("modhash", Json_decode.string, json)
        };
}

function decodeRedditResponse(json) {
  return {
          data: Json_decode.field("data", decodeRedditResponseData, json),
          kind: Json_decode.field("kind", Json_decode.string, json)
        };
}

function parseRedditResponse(json) {
  return decodeRedditResponse(Json.parseOrRaise(json));
}

export {
  subredditName ,
  subredditURL ,
  decodeRedditPostData ,
  decodeRedditPost ,
  decodeRedditResponseData ,
  decodeRedditResponse ,
  parseRedditResponse ,
  
}
/* No side effect */
